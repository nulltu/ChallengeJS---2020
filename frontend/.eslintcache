[{"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\index.js":"1","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\App.js":"2","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\pages\\Home.js":"3","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\Header.js":"4","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\pages\\Operations.js":"5","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\OperationModify.js":"6","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\Operation.js":"7","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\OperationDelete.js":"8","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\ListOperations.js":"9","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\Form.js":"10","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\reportWebVitals.js":"11","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\redux\\rootReducer.js":"12","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\redux\\reducers\\operationReducer.js":"13","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\redux\\actions\\operationsActions.js":"14","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\index.js":"15","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\reportWebVitals.js":"16","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\App.js":"17","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\redux\\rootReducer.js":"18","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\pages\\Operations.js":"19","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\Header.js":"20","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\OperationModify.js":"21","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\OperationDelete.js":"22","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\pages\\Home.js":"23","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\Operation.js":"24","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\redux\\reducers\\operationReducer.js":"25","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\ListOperations.js":"26","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\Form.js":"27","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\redux\\actions\\operationsActions.js":"28"},{"size":775,"mtime":1607246964817,"results":"29","hashOfConfig":"30"},{"size":973,"mtime":1607185888061,"results":"31","hashOfConfig":"30"},{"size":3482,"mtime":1607266532114,"results":"32","hashOfConfig":"30"},{"size":450,"mtime":1607247114681,"results":"33","hashOfConfig":"30"},{"size":371,"mtime":1607247089969,"results":"34","hashOfConfig":"30"},{"size":4061,"mtime":1607245258759,"results":"35","hashOfConfig":"30"},{"size":889,"mtime":1607266624861,"results":"36","hashOfConfig":"30"},{"size":820,"mtime":1607246826765,"results":"37","hashOfConfig":"30"},{"size":2366,"mtime":1607266882336,"results":"38","hashOfConfig":"30"},{"size":2986,"mtime":1607247235819,"results":"39","hashOfConfig":"30"},{"size":375,"mtime":1607119236503,"results":"40","hashOfConfig":"30"},{"size":215,"mtime":1607120583957,"results":"41","hashOfConfig":"30"},{"size":550,"mtime":1607180270404,"results":"42","hashOfConfig":"30"},{"size":1612,"mtime":1607267010450,"results":"43","hashOfConfig":"30"},{"size":775,"mtime":1607246964817,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1607119236503,"results":"46","hashOfConfig":"45"},{"size":973,"mtime":1607185888061,"results":"47","hashOfConfig":"45"},{"size":215,"mtime":1607120583957,"results":"48","hashOfConfig":"45"},{"size":371,"mtime":1607247089969,"results":"49","hashOfConfig":"45"},{"size":450,"mtime":1607247114681,"results":"50","hashOfConfig":"45"},{"size":4155,"mtime":1607364102506,"results":"51","hashOfConfig":"45"},{"size":820,"mtime":1607246826765,"results":"52","hashOfConfig":"45"},{"size":3482,"mtime":1607266532114,"results":"53","hashOfConfig":"45"},{"size":889,"mtime":1607266624861,"results":"54","hashOfConfig":"45"},{"size":550,"mtime":1607180270404,"results":"55","hashOfConfig":"45"},{"size":2366,"mtime":1607266882336,"results":"56","hashOfConfig":"45"},{"size":2986,"mtime":1607247235819,"results":"57","hashOfConfig":"45"},{"size":1639,"mtime":1607391512823,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"m5h2kk",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"k8fx4s",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\index.js",[],["123","124"],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\App.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\pages\\Home.js",["125"],"import '../styles/home.css'\r\nimport { useEffect } from 'react'\r\nimport cool from '../assets/images/cool.svg'\r\nimport noCool from '../assets/images/no-cool.svg'\r\nimport neutral from '../assets/images/neutral.svg'\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction Home(props) {\r\n\r\n    useEffect(() => {\r\n        props.allOperations()\r\n    }, [])\r\n\r\n    //We shrink the array to a maximum of 10 elements.\r\n    const filterFirstTen = props.operations.slice(0, 10) \r\n\r\n    let accumulatorNumberList = 1; //Index of table \r\n    let totalIngressAmount = 0; //Accumulator ingress\r\n    let totalEgressAmount = 0; //Accumulator egress\r\n    if (props.operations === null) {\r\n        <p>Now Loading</p>\r\n    } else {\r\n        const totalIngress = props.operations.filter(operation => operation.type_operation === \"ingress\")\r\n        for (let i = 0; i < totalIngress.length; i++) {\r\n            totalIngressAmount += totalIngress[i].amount;\r\n        }\r\n        const totalEgress = props.operations.filter(operation => operation.type_operation === \"egress\")\r\n        for (let i = 0; i < totalEgress.length; i++) {\r\n            totalEgressAmount += totalEgress[i].amount;\r\n        }\r\n    }\r\n    //Total Balance\r\n    const totalBalance = totalIngressAmount - totalEgressAmount;\r\n    return (\r\n\r\n        //Render Home\r\n        <div className=\"container__home\">\r\n            <div className=\"resulting\">\r\n                <div>\r\n                    {\r\n                        totalBalance > 0 ? <img src={cool} alt=\"\" />\r\n                            : totalBalance === 0 ? <img src={neutral} alt=\"\" />\r\n                                : <img src={noCool} alt=\"\" />\r\n                    }\r\n                    <div className=\"value__balance\">\r\n                        <p className=\"total__balance\">Total Balance:</p>\r\n                        <span>${totalBalance}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p className=\"ingress\">Total Ingress: ${totalIngressAmount}</p>\r\n                    <p className=\"egress\">Total Egress: ${totalEgressAmount}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"last__ten\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Concept</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filterFirstTen.map(operation => {\r\n                            return (\r\n                                <tr  key={operation.id}>\r\n                                    <th scope=\"row\">{accumulatorNumberList++}</th>\r\n                                    <td className={operation.type_operation === 'ingress' ? \"ingress\" : \"egress\"}>\r\n                                        {operation.concept}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        operations: state.operations.listOperations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    allOperations: operationsActions.allOperations\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\Header.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\pages\\Operations.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\OperationModify.js",["126","127"],"import { useState, useEffect } from 'react'\r\nimport '../styles/operationModify.css'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction OperationModify(props) {\r\n    //Status with current operation\r\n    const [operation, setOperation] = useState([])\r\n\r\n    //Status with the data to be modified.\r\n    const [updateOperation, setUpdateOperation] = useState({\r\n        concept: '', amount: '', date_operation: ''\r\n    })\r\n\r\n    useEffect(async () => {\r\n        //The component is mount and we bring the operation by id\r\n        const response = await props.getOperationById(idSearch)\r\n        //save in the state\r\n        setOperation(response)\r\n\r\n    }, [])\r\n\r\n    //I get the id of the operation\r\n    const idSearch = (props.match.params.id)\r\n\r\n    const readInput = e => {\r\n        const textBox = e.target.name\r\n        const value = e.target.value\r\n        setUpdateOperation({\r\n            ...updateOperation,\r\n            [textBox]: value\r\n        })\r\n    }\r\n\r\n    const sendInfo = async (e) => {\r\n        e.preventDefault()\r\n        //Send id and object for update\r\n        const response = await props.updateOperation(idSearch, updateOperation)\r\n        if (!response.code) {\r\n            props.history.push('/Operations')\r\n        } else {\r\n            swal({ title: 'Complete all fields please' })\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container__modify\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Concept</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={readInput} name=\"concept\"\r\n                        value={updateOperation.concept} placeholder={operation.concept} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Amount:</label>\r\n                    <input className=\"form-control\" type=\"number\" onChange={readInput} name=\"amount\"\r\n                        value={updateOperation.amount} placeholder={operation.amount} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Date:</label>\r\n                    <input className=\"form-control\" type=\"date\" onChange={readInput} name=\"date_operation\"\r\n                        value={updateOperation.date_operation} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <input type=\"radio\" id=\"customRadioInline1\" name=\"type_operation\"\r\n                            className=\"custom-control-input\" onChange={readInput} value=\"ingress\" disabled />\r\n                        <label className=\"custom-control-label\" for=\"customRadioInline1\">Ingress</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <input type=\"radio\" id=\"customRadioInline2\" name=\"type_operation\"\r\n                            className=\"custom-control-input\" onChange={readInput} value=\"egress\" disabled />\r\n                        <label className=\"custom-control-label\" for=\"customRadioInline2\">Egress</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modify__cancel\">\r\n                    <Link to=\"\">\r\n                        <button type=\"button\" className=\"btn btn-dark btn-sm\" onClick={sendInfo}>Modify</button>\r\n                    </Link>\r\n                    <Link to=\"/operations\">\r\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" >Cancel</button>\r\n                    </Link>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Acctions in the component\r\nconst mapDispatchToProps = {\r\n    getOperationById: operationsActions.operationById,\r\n    updateOperation: operationsActions.updateOperation\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OperationModify)\r\n","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\Operation.js",["128","129"],"import { Link } from 'react-router-dom'\r\nimport trash from '../assets/icons/delete.svg'\r\nimport edit from '../assets/icons/edit.svg'\r\n\r\nfunction Operation(props) {\r\n    return (\r\n        <tr  key={props.operation.id}>\r\n        <td>{props.operation.concept}</td>\r\n        <td>${props.operation.amount}</td>\r\n        <td>{props.operation.formatDate|| props.operation.date_operation}</td>\r\n        <td className={props.operation.type_operation === 'ingress' ? \"ingress\" : \"egress\"}>\r\n            {props.operation.type_operation}\r\n        </td>\r\n        <td className=\"container__icons__operation\">\r\n            <Link className=\"remove\" to={`/operationDelete/${props.operation.id}`}><img src={trash}></img></Link>\r\n            <Link className=\"update\" to={`/operationModify/${props.operation.id}`}><img src={edit}></img></Link>\r\n        </td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default Operation\r\n","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\OperationDelete.js",["130","131","132"],"import { useEffect } from 'react'\r\nimport '../styles/operationModify.css'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction OperationDelete(props) {\r\n\r\n    const idSearch = (props.match.params.id)\r\n    \r\n    useEffect(async () => {\r\n        const response = await props.deleteOperation(idSearch)\r\n        if (response.status === 200) {\r\n            props.history.push('/Operations')\r\n        }\r\n        swal({ title: ' The operation has been successfully removed!' })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteOperation: operationsActions.deleteOperation\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OperationDelete)\r\n","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\ListOperations.js",["133"],"import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport Operation from '../components/Operation'\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction ListOperations(props) {\r\n\r\n    useEffect(() => {\r\n        props.allOperations()\r\n    }, [])\r\n\r\n\r\n\r\n    const ingressOperation = props.operations.filter(operation => operation.type_operation === 'ingress')\r\n    const egressOperation = props.operations.filter(operation => operation.type_operation === 'egress')\r\n\r\n    let contador = 1\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Concept</th>\r\n                        <th scope=\"col\">Amount</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Type Operation</th>\r\n                        <th scope=\"col\">Remove/Modify</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ingressOperation.map(operation => {\r\n                        return (\r\n                            <Operation operation={operation} contador={contador++} />\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Concept</th>\r\n                        <th scope=\"col\">Amount</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Type Operation</th>\r\n                        <th scope=\"col\">Remove/Modify</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {egressOperation.map(operation => {\r\n                        return (\r\n                            <Operation operation={operation}/>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        operations: state.operations.listOperations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    allOperations: operationsActions.allOperations\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOperations)\r\n","C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\components\\Form.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\redux\\reducers\\operationReducer.js",[],"C:\\Users\\nulltu\\Desktop\\Challenge JS\\frontend\\src\\redux\\actions\\operationsActions.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\index.js",[],["134","135"],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\App.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\pages\\Operations.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\Header.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\OperationModify.js",["136","137"],"import { useState, useEffect } from 'react'\r\nimport '../styles/operationModify.css'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction OperationModify(props) {\r\n    //Status with current operation\r\n    const [operation, setOperation] = useState([])\r\n\r\n    //Status with the data to be modified.\r\n    const [updateOperation, setUpdateOperation] = useState({\r\n        concept: '', amount: '', date_operation: ''\r\n    })\r\n\r\n    useEffect(async () => {\r\n        //The component is mount and we bring the operation by id\r\n        const response = await props.getOperationById(idSearch)\r\n        //save in the state\r\n        setOperation(response)\r\n\r\n    }, [])\r\n\r\n    //I get the id of the operation\r\n    const idSearch = (props.match.params.id)\r\n\r\n    const readInput = e => {\r\n        const textBox = e.target.name\r\n        const value = e.target.value\r\n        setUpdateOperation({\r\n            ...updateOperation,\r\n            [textBox]: value\r\n        })\r\n    }\r\n\r\n    const sendInfo = async (e) => {\r\n        e.preventDefault()\r\n        //Send id and object for update\r\n        const response = await props.updateOperation(idSearch, updateOperation)\r\n        if (!response.code) {\r\n            props.history.push('/Operations')\r\n            swal({\r\n                title: \"The operation has been modified successfully\" })\r\n        } else {\r\n            swal({ title: 'Complete all fields please' })\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container__modify\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Concept</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={readInput} name=\"concept\"\r\n                        value={updateOperation.concept} placeholder={operation.concept} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Amount:</label>\r\n                    <input className=\"form-control\" type=\"number\" onChange={readInput} name=\"amount\"\r\n                        value={updateOperation.amount} placeholder={operation.amount} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Date:</label>\r\n                    <input className=\"form-control\" type=\"date\" onChange={readInput} name=\"date_operation\"\r\n                        value={updateOperation.date_operation} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <input type=\"radio\" id=\"customRadioInline1\" name=\"type_operation\"\r\n                            className=\"custom-control-input\" onChange={readInput} value=\"ingress\" disabled />\r\n                        <label className=\"custom-control-label\" for=\"customRadioInline1\">Ingress</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <input type=\"radio\" id=\"customRadioInline2\" name=\"type_operation\"\r\n                            className=\"custom-control-input\" onChange={readInput} value=\"egress\" disabled />\r\n                        <label className=\"custom-control-label\" for=\"customRadioInline2\">Egress</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modify__cancel\">\r\n                    <Link to=\"\">\r\n                        <button type=\"button\" className=\"btn btn-dark btn-sm\" onClick={sendInfo}>Modify</button>\r\n                    </Link>\r\n                    <Link to=\"/operations\">\r\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" >Cancel</button>\r\n                    </Link>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Acctions in the component\r\nconst mapDispatchToProps = {\r\n    getOperationById: operationsActions.operationById,\r\n    updateOperation: operationsActions.updateOperation\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OperationModify)\r\n","C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\OperationDelete.js",["138","139","140"],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\pages\\Home.js",["141"],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\Operation.js",["142","143"],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\redux\\reducers\\operationReducer.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\ListOperations.js",["144"],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\components\\Form.js",[],"C:\\Users\\nulltu\\Desktop\\DEPLOY BACKEND\\frontend\\src\\redux\\actions\\operationsActions.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":13,"column":8,"nodeType":"151","endLine":13,"endColumn":10,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":17,"column":15,"nodeType":"154","endLine":23,"endColumn":6},{"ruleId":"149","severity":1,"message":"155","line":23,"column":8,"nodeType":"151","endLine":23,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":15,"column":84,"nodeType":"159","endLine":15,"endColumn":101},{"ruleId":"157","severity":1,"message":"158","line":16,"column":84,"nodeType":"159","endLine":16,"endColumn":100},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"153","line":12,"column":15,"nodeType":"154","endLine":18,"endColumn":6},{"ruleId":"149","severity":1,"message":"155","line":18,"column":8,"nodeType":"151","endLine":18,"endColumn":10,"suggestions":"164"},{"ruleId":"149","severity":1,"message":"150","line":11,"column":8,"nodeType":"151","endLine":11,"endColumn":10,"suggestions":"165"},{"ruleId":"145","replacedBy":"166"},{"ruleId":"147","replacedBy":"167"},{"ruleId":"149","severity":1,"message":"153","line":17,"column":15,"nodeType":"154","endLine":23,"endColumn":6},{"ruleId":"149","severity":1,"message":"155","line":23,"column":8,"nodeType":"151","endLine":23,"endColumn":10,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"153","line":12,"column":15,"nodeType":"154","endLine":18,"endColumn":6},{"ruleId":"149","severity":1,"message":"155","line":18,"column":8,"nodeType":"151","endLine":18,"endColumn":10,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"150","line":13,"column":8,"nodeType":"151","endLine":13,"endColumn":10,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"158","line":15,"column":84,"nodeType":"159","endLine":15,"endColumn":101},{"ruleId":"157","severity":1,"message":"158","line":16,"column":84,"nodeType":"159","endLine":16,"endColumn":100},{"ruleId":"149","severity":1,"message":"150","line":11,"column":8,"nodeType":"151","endLine":11,"endColumn":10,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["174"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'idSearch' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["176"],["177"],["172"],["173"],["178"],["179"],["180"],["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"182","fix":"187"},{"desc":"184","fix":"188"},{"desc":"184","fix":"189"},{"desc":"182","fix":"190"},{"desc":"182","fix":"191"},"Update the dependencies array to be: [props]",{"range":"192","text":"193"},"Update the dependencies array to be: [idSearch, props]",{"range":"194","text":"195"},{"range":"196","text":"195"},{"range":"197","text":"193"},{"range":"198","text":"195"},{"range":"199","text":"195"},{"range":"200","text":"193"},{"range":"201","text":"193"},[409,411],"[props]",[793,795],"[idSearch, props]",[604,606],[317,319],[793,795],[604,606],[409,411],[317,319]]