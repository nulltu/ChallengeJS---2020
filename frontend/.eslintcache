[{"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\index.js":"1","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\App.js":"2","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\rootReducer.js":"4","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Home.js":"5","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Operations.js":"6","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\Operation.js":"7","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\Header.js":"8","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\OperationModify.js":"9","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\OperationDelete.js":"10","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\reducers\\operationReducer.js":"11","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\Form.js":"12","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\ListOperations.js":"13","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\actions\\operationsActions.js":"14","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Login.js":"15","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Signup.js":"16","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\reducers\\userReducer.js":"17","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\actions\\userActions.js":"18","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\index.js":"19","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\App.js":"20","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\reportWebVitals.js":"21","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\rootReducer.js":"22","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Login.js":"23","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Operations.js":"24","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Home.js":"25","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Signup.js":"26","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\actions\\userActions.js":"27","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\Header.js":"28","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\OperationModify.js":"29","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\Operation.js":"30","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\OperationDelete.js":"31","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\reducers\\operationReducer.js":"32","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\reducers\\userReducer.js":"33","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\Form.js":"34","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\ListOperations.js":"35","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\actions\\operationsActions.js":"36"},{"size":801,"mtime":1607720965804,"results":"37","hashOfConfig":"38"},{"size":1938,"mtime":1607770460739,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1607654569104,"results":"40","hashOfConfig":"38"},{"size":291,"mtime":1607672020761,"results":"41","hashOfConfig":"38"},{"size":3358,"mtime":1607689584200,"results":"42","hashOfConfig":"38"},{"size":371,"mtime":1607654569103,"results":"43","hashOfConfig":"38"},{"size":867,"mtime":1607655521409,"results":"44","hashOfConfig":"38"},{"size":1445,"mtime":1607769253057,"results":"45","hashOfConfig":"38"},{"size":4070,"mtime":1607720894509,"results":"46","hashOfConfig":"38"},{"size":793,"mtime":1607654569101,"results":"47","hashOfConfig":"38"},{"size":550,"mtime":1607654569104,"results":"48","hashOfConfig":"38"},{"size":3303,"mtime":1607654967810,"results":"49","hashOfConfig":"38"},{"size":2370,"mtime":1607654569101,"results":"50","hashOfConfig":"38"},{"size":1650,"mtime":1607655260905,"results":"51","hashOfConfig":"38"},{"size":2058,"mtime":1607770316752,"results":"52","hashOfConfig":"38"},{"size":1146,"mtime":1607762529108,"results":"53","hashOfConfig":"38"},{"size":732,"mtime":1607761447326,"results":"54","hashOfConfig":"38"},{"size":2050,"mtime":1607770191872,"results":"55","hashOfConfig":"38"},{"size":801,"mtime":1607720965804,"results":"56","hashOfConfig":"57"},{"size":1938,"mtime":1607770460739,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1607654569104,"results":"59","hashOfConfig":"57"},{"size":291,"mtime":1607672020761,"results":"60","hashOfConfig":"57"},{"size":2244,"mtime":1607785876478,"results":"61","hashOfConfig":"57"},{"size":371,"mtime":1607654569103,"results":"62","hashOfConfig":"57"},{"size":5101,"mtime":1607813052982,"results":"63","hashOfConfig":"57"},{"size":1772,"mtime":1607786444499,"results":"64","hashOfConfig":"57"},{"size":2050,"mtime":1607770191872,"results":"65","hashOfConfig":"57"},{"size":1528,"mtime":1607783492456,"results":"66","hashOfConfig":"57"},{"size":4070,"mtime":1607720894509,"results":"67","hashOfConfig":"57"},{"size":867,"mtime":1607655521409,"results":"68","hashOfConfig":"57"},{"size":793,"mtime":1607654569101,"results":"69","hashOfConfig":"57"},{"size":550,"mtime":1607654569104,"results":"70","hashOfConfig":"57"},{"size":732,"mtime":1607761447326,"results":"71","hashOfConfig":"57"},{"size":5396,"mtime":1607783175321,"results":"72","hashOfConfig":"57"},{"size":2370,"mtime":1607654569101,"results":"73","hashOfConfig":"57"},{"size":1650,"mtime":1607655260905,"results":"74","hashOfConfig":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"9ow19p",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"72ddtb",{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"119"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\index.js",[],["157","158"],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\App.js",["159"],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Home.js",["160"],"import '../styles/home.css'\r\nimport { useEffect } from 'react'\r\nimport cool from '../assets/images/cool.svg'\r\nimport noCool from '../assets/images/no-cool.svg'\r\nimport neutral from '../assets/images/neutral.svg'\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction Home(props) {\r\n\r\n    useEffect(() => {\r\n        props.allOperations()\r\n    }, [])\r\n\r\n    //We shrink the array to a maximum of 10 elements.\r\n    const filterFirstTen = props.operations.slice(0, 10) \r\n\r\n   \r\n\r\n    let accumulatorNumberList = 1; //Index of table \r\n    let sumIngress = 0;\r\n    let sumEgress = 0;\r\n    if (props.operations === null) {\r\n        <p>Now Loading</p>\r\n    } else {\r\n\r\n        const totalIngress = props.operations.filter(operation => operation.type_operation === \"ingress\")\r\n             sumIngress = totalIngress.reduce((sum, value) => (sum + parseFloat(value.amount)), 0)\r\n\r\n        \r\n        const totalEgress = props.operations.filter(operation => operation.type_operation === \"egress\")\r\n        sumEgress = totalEgress.reduce((sum, value) => (sum + parseFloat(value.amount)), 0)\r\n        \r\n    }\r\n\r\n    const totalBalance = sumIngress - sumEgress;\r\n\r\n    return (\r\n\r\n        //Render Home\r\n        <div className=\"container__home\">\r\n            <div className=\"resulting\">\r\n                <div>\r\n                    {\r\n                        totalBalance > 0 ? <img src={cool} alt=\"\" />\r\n                            : totalBalance === 0 ? <img src={neutral} alt=\"\" />\r\n                                : <img src={noCool} alt=\"\" />\r\n                    }\r\n                    <div className=\"value__balance\">\r\n                        <p className=\"total__balance\">Total Balance:</p>\r\n                        <span>${totalBalance.toFixed(2)}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p className=\"ingress\">Total Ingress: ${sumIngress}</p>\r\n                    <p className=\"egress\">Total Egress: ${sumEgress}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"last__ten\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Concept</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filterFirstTen.map(operation => {\r\n                            return (\r\n                                <tr  key={operation.id}>\r\n                                    <th scope=\"row\">{accumulatorNumberList++}</th>\r\n                                    <td className={operation.type_operation === 'ingress' ? \"ingress\" : \"egress\"}>\r\n                                        {operation.concept}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        operations: state.operations.listOperations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    allOperations: operationsActions.allOperations\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Operations.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\Operation.js",["161","162"],"import { Link } from 'react-router-dom'\r\nimport trash from '../assets/icons/delete.svg'\r\nimport edit from '../assets/icons/edit.svg'\r\n\r\nfunction Operation(props) {\r\n    return (\r\n        <tr  key={props.operation.id}>\r\n        <td>{props.operation.concept}</td>\r\n        <td>${props.operation.amount}</td>\r\n        <td>{props.operation.createdAt.slice(0,10)}</td>\r\n        <td className={props.operation.type_operation === 'ingress' ? \"ingress\" : \"egress\"}>\r\n            {props.operation.type_operation}\r\n        </td>\r\n        <td className=\"container__icons__operation\">\r\n            <Link className=\"remove\" to={`/operationDelete/${props.operation.id}`}><img src={trash}></img></Link>\r\n            <Link className=\"update\" to={`/operationModify/${props.operation.id}`}><img src={edit}></img></Link>\r\n        </td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default Operation\r\n","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\Header.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\OperationModify.js",["163","164"],"import { useState, useEffect } from 'react'\r\n// import '../styles/operationModify.css'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction OperationModify(props) {\r\n    //Status with current operation\r\n    const [operation, setOperation] = useState([])\r\n\r\n    //Status with the data to be modified.\r\n    const [updateOperation, setUpdateOperation] = useState({\r\n        concept: '', amount: '', date_operation: ''\r\n    })\r\n\r\n    useEffect(async () => {\r\n        //The component is mount and we bring the operation by id\r\n        const response = await props.getOperationById(idSearch)\r\n        //save in the state\r\n        setOperation(response)\r\n\r\n    }, [])\r\n\r\n    //I get the id of the operation\r\n    const idSearch = (props.match.params.id)\r\n\r\n    const readInput = e => {\r\n        const textBox = e.target.name\r\n        const value = e.target.value\r\n        setUpdateOperation({\r\n            ...updateOperation,\r\n            [textBox]: value\r\n        })\r\n    }\r\n\r\n    const sendInfo = async (e) => {\r\n        e.preventDefault()\r\n        //Send id and object for update\r\n        const response = await props.updateOperation(idSearch, updateOperation)\r\n        if (!response.code) {\r\n            props.history.push('/Operations')\r\n        } else {\r\n            swal({ title: 'Complete all fields please' })\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container__modify\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Concept</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={readInput} name=\"concept\"\r\n                        value={updateOperation.concept} placeholder={operation.concept} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Amount:</label>\r\n                    <input className=\"form-control\" type=\"number\" onChange={readInput} name=\"amount\"\r\n                        value={updateOperation.amount} placeholder={`$${operation.amount}`} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Date:</label>\r\n                    <input className=\"form-control\" type=\"date\" onChange={readInput} name=\"date_operation\"\r\n                        value={updateOperation.date_operation} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <input type=\"radio\" id=\"customRadioInline1\" name=\"type_operation\"\r\n                            className=\"custom-control-input\" onChange={readInput} value=\"ingress\" disabled />\r\n                        <label className=\"custom-control-label\" for=\"customRadioInline1\">Ingress</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <input type=\"radio\" id=\"customRadioInline2\" name=\"type_operation\"\r\n                            className=\"custom-control-input\" onChange={readInput} value=\"egress\" disabled />\r\n                        <label className=\"custom-control-label\" for=\"customRadioInline2\">Egress</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modify__cancel\">\r\n                    <Link to=\"\">\r\n                        <button type=\"button\" className=\"btn btn-dark btn-sm\" onClick={sendInfo}>Modify</button>\r\n                    </Link>\r\n                    <Link to=\"/operations\">\r\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" >Cancel</button>\r\n                    </Link>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Acctions in the component\r\nconst mapDispatchToProps = {\r\n    getOperationById: operationsActions.operationById,\r\n    updateOperation: operationsActions.updateOperation\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OperationModify)\r\n","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\OperationDelete.js",["165","166"],"import { useEffect } from 'react'\r\nimport '../styles/operationModify.css'\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction OperationDelete(props) {\r\n\r\n    const idSearch = (props.match.params.id)\r\n    \r\n    useEffect(async () => {\r\n        const response = await props.deleteOperation(idSearch)\r\n        if (response.status === 200) {\r\n            props.history.push('/Operations')\r\n        }\r\n        swal({ title: ' The operation has been successfully removed!' })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteOperation: operationsActions.deleteOperation\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OperationDelete)\r\n","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\reducers\\operationReducer.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\Form.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\components\\ListOperations.js",["167"],"import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport Operation from '../components/Operation'\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\n\r\nfunction ListOperations(props) {\r\n\r\n    useEffect(() => {\r\n        //we bring the data from redux\r\n        props.allOperations()\r\n    }, [])\r\n\r\n    //filter for type operation\r\n    const ingressOperation = props.operations.filter(operation => operation.type_operation === 'ingress')\r\n    const egressOperation = props.operations.filter(operation => operation.type_operation === 'egress')\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Concept</th>\r\n                        <th scope=\"col\">$</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Del/Mod</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ingressOperation.map(operation => {\r\n                        return (\r\n                            <Operation operation={operation} />\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Concept</th>\r\n                        <th scope=\"col\">$</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Del/Mod</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {egressOperation.map(operation => {\r\n                        return (\r\n                            <Operation operation={operation}/>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n//access state to redux\r\nconst mapStateToProps = state => {\r\n    return {\r\n        operations: state.operations.listOperations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    allOperations: operationsActions.allOperations\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOperations)\r\n","C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\actions\\operationsActions.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Login.js",["168"],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\pages\\Signup.js",["169"],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\nulltu\\Desktop\\challenge js\\ChallengeJS---2020\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\index.js",[],["170","171"],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\App.js",["172"],"import Home from '../src/pages/Home'\r\nimport Operations from '../src/pages/Operations'\r\nimport userActions from '../src/redux/actions/userActions'\r\nimport Header from '../src/components/Header'\r\nimport Operation from '../src/components/Operation'\r\nimport OperationModify from '../src/components/OperationModify'\r\nimport OperationDelete from '../src/components/OperationDelete'\r\nimport Login from '../src/pages/Login'\r\nimport Signup from '../src/pages/Signup'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n\r\n    if (this.props.tokenLogged) {\r\n\r\n      var routes = (\r\n        <Switch>\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path='/operations' component={Operations} />\r\n          <Route path='/operation' component={Operation} />\r\n          <Route path='/operationModify/:id' component={OperationModify} />\r\n          <Route path='/operationDelete/:id' component={OperationDelete} />\r\n          <Route path='/operation' component={Operation} />\r\n          <Redirect to='/home' />\r\n        </Switch>\r\n      )\r\n    }\r\n    else if (localStorage.getItem('accessToken')) {\r\n      this.props.forcedLogin(localStorage.getItem('accessToken'));\r\n      console.log(\"hola\")\r\n    } else {\r\n      var routes = (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <Header />\r\n        {routes}\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tokenLogged: state.users.accessToken\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n  forcedLogin: userActions.forcedLogin\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Login.js",["173"],"import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../styles/login.css'\r\nimport userActions from '../redux/actions/userActions'\r\nimport Button from '@material-ui/core/Button';\r\nimport '../styles/login.css'\r\nimport { TextField } from \"@material-ui/core\";\r\nimport swal from 'sweetalert';\r\n\r\nfunction Login(props) {\r\n\r\n    // const inputStyle = { WebkitBoxShadow: \"0 0 0 1000px white inset\" };\r\n\r\n    const [loginData, setLoginData] = useState({ username: '', password: '' })\r\n\r\n    const readInput = e => {\r\n        const textBox = e.target.name\r\n        const value = e.target.value\r\n        setLoginData({\r\n            ...loginData,\r\n            [textBox]: value\r\n        })\r\n    }\r\n\r\n    console.log(loginData)\r\n    console.log(props)\r\n\r\n    const sendInfo = async e => {\r\n        e.preventDefault()\r\n        if(loginData.username != \"\"){\r\n            const response = await props.loginApp(loginData)\r\n        if (response.data.message === \"Authentication successful\") {\r\n            setLoginData({\r\n                username: '',\r\n                password: ''\r\n            })\r\n\r\n            props.history.push('/operations')\r\n        }\r\n        }else {\r\n            swal({ title: \"The username and / or password field is empty.\"})\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container__login\">\r\n            <div>\r\n                <TextField id=\"standard-basic\" label=\"username\"\r\n                    type=\"text\" name=\"username\" value={loginData.username} onChange={readInput} />\r\n            </div>\r\n            <div>\r\n                <TextField id=\"standard-basic\" label=\"password\"\r\n                    type=\"password\" name=\"password\" value={loginData.password} onChange={readInput} />\r\n            </div>\r\n            <div>\r\n                <Button variant=\"outlined\" onClick={sendInfo}>Login</Button>\r\n                <span>You do not have an account?</span>\r\n                <Link to=\"/signup\">create account</Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createNewUser: userActions.createNewUser,\r\n    loginApp: userActions.loginApp\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)\r\n","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Operations.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Home.js",["174","175","176","177"],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\pages\\Signup.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\Header.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\OperationModify.js",["178","179"],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\Operation.js",["180","181"],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\OperationDelete.js",["182","183"],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\reducers\\operationReducer.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\Form.js",["184","185"],"import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { useState } from 'react'\r\nimport '../styles/form.css'\r\nimport { connect } from 'react-redux'\r\nimport operationsActions from '../redux/actions/operationsActions'\r\nimport swal from 'sweetalert';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\n\r\n\r\nfunction Form(props) {\r\n\r\n\r\n    \r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n    };\r\n\r\n    \r\n    // SEGUIR AQUI!!!!\r\n    \r\n\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    //create object new operation\r\n    const [newOperation, setNewOperation] = useState({\r\n        concept: null, amount: '', date_operation: '', type_operation: null\r\n    })\r\n\r\n    //read inputs and saved in state\r\n    const readInput = e => {\r\n        const textBox = e.target.name\r\n        const value = e.target.value\r\n        setNewOperation({\r\n            ...newOperation,\r\n            [textBox]: value,\r\n        })\r\n    }\r\n\r\n    //send opetation and validate simple form \r\n    const sendInfo = async e => {\r\n        e.preventDefault()\r\n        const response = await props.addOperation(newOperation)\r\n\r\n        if (response.data.errno) {\r\n            swal({ title: 'Complete all fields please' })\r\n        }\r\n        else if (response.status === 200) {\r\n            setNewOperation({\r\n                concept: \"\",\r\n                amount: \"\",\r\n                date_operation: \"\",\r\n                type_operation: \"\",\r\n            })\r\n        }\r\n    }\r\n\r\n    console.log(setSelectedDate)\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Concept\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"For example: Buy TV LG\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"text\"\r\n                    onChange={readInput}\r\n                    name=\"concept\"\r\n                    value={newOperation.concept}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Amount\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"$\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"number\"\r\n                    onChange={readInput}\r\n                    name=\"amount\"\r\n                    value={newOperation.amount}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Date picker dialog\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div>\r\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                    <FormControlLabel control={<Radio />} checked={newOperation.type_operation === \"ingress\"}\r\n                     label=\"Ingress\" name=\"type_operation\" onChange={readInput} value=\"ingress\" />\r\n                    <FormControlLabel control={<Radio />} checked={newOperation.type_operation === \"egress\"}\r\n                     label=\"Egress\" name=\"type_operation\" onChange={readInput} value=\"egress\" />\r\n                </RadioGroup>\r\n            </div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                onClick={sendInfo}\r\n                startIcon={<SaveIcon />}\r\n            >\r\n                Save\r\n             </Button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n//send operation to the corresponding actions.\r\nconst mapDispatchToProps = {\r\n    addOperation: operationsActions.addOperation\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)\r\n","C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\components\\ListOperations.js",["186"],"C:\\Users\\nulltu\\Desktop\\Data\\frontend\\src\\redux\\actions\\operationsActions.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":36,"column":11,"nodeType":"193","messageId":"194","endLine":36,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":13,"column":8,"nodeType":"197","endLine":13,"endColumn":10,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":15,"column":84,"nodeType":"201","endLine":15,"endColumn":101},{"ruleId":"199","severity":1,"message":"200","line":16,"column":84,"nodeType":"201","endLine":16,"endColumn":100},{"ruleId":"195","severity":1,"message":"202","line":17,"column":15,"nodeType":"203","endLine":23,"endColumn":6},{"ruleId":"195","severity":1,"message":"204","line":23,"column":8,"nodeType":"197","endLine":23,"endColumn":10,"suggestions":"205"},{"ruleId":"195","severity":1,"message":"202","line":11,"column":15,"nodeType":"203","endLine":17,"endColumn":6},{"ruleId":"195","severity":1,"message":"204","line":17,"column":8,"nodeType":"197","endLine":17,"endColumn":10,"suggestions":"206"},{"ruleId":"195","severity":1,"message":"196","line":12,"column":8,"nodeType":"197","endLine":12,"endColumn":10,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":12,"column":11,"nodeType":"193","messageId":"210","endLine":12,"endColumn":21},{"ruleId":"208","severity":1,"message":"211","line":23,"column":15,"nodeType":"193","messageId":"210","endLine":23,"endColumn":23},{"ruleId":"187","replacedBy":"212"},{"ruleId":"189","replacedBy":"213"},{"ruleId":"191","severity":1,"message":"192","line":36,"column":11,"nodeType":"193","messageId":"194","endLine":36,"endColumn":17},{"ruleId":"214","severity":1,"message":"215","line":31,"column":31,"nodeType":"216","messageId":"217","endLine":31,"endColumn":33},{"ruleId":"208","severity":1,"message":"218","line":4,"column":8,"nodeType":"193","messageId":"210","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"219","line":5,"column":8,"nodeType":"193","messageId":"210","endLine":5,"endColumn":15},{"ruleId":"208","severity":1,"message":"220","line":25,"column":8,"nodeType":"193","messageId":"210","endLine":25,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":46,"column":8,"nodeType":"197","endLine":46,"endColumn":10,"suggestions":"221"},{"ruleId":"195","severity":1,"message":"202","line":17,"column":15,"nodeType":"203","endLine":23,"endColumn":6},{"ruleId":"195","severity":1,"message":"204","line":23,"column":8,"nodeType":"197","endLine":23,"endColumn":10,"suggestions":"222"},{"ruleId":"199","severity":1,"message":"200","line":15,"column":84,"nodeType":"201","endLine":15,"endColumn":101},{"ruleId":"199","severity":1,"message":"200","line":16,"column":84,"nodeType":"201","endLine":16,"endColumn":100},{"ruleId":"195","severity":1,"message":"202","line":11,"column":15,"nodeType":"203","endLine":17,"endColumn":6},{"ruleId":"195","severity":1,"message":"204","line":17,"column":8,"nodeType":"197","endLine":17,"endColumn":10,"suggestions":"223"},{"ruleId":"208","severity":1,"message":"224","line":19,"column":8,"nodeType":"193","messageId":"210","endLine":19,"endColumn":19},{"ruleId":"208","severity":1,"message":"225","line":20,"column":8,"nodeType":"193","messageId":"210","endLine":20,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":12,"column":8,"nodeType":"197","endLine":12,"endColumn":10,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-redeclare","'routes' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["229"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'idSearch' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["230"],["231"],["232"],"no-unused-vars","'inputStyle' is assigned a value but never used.","unusedVar","'response' is assigned a value but never used.",["227"],["228"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'noCool' is defined but never used.","'neutral' is defined but never used.","'Button' is defined but never used.",["233"],["234"],["235"],"'FormControl' is defined but never used.","'FormLabel' is defined but never used.",["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"239","fix":"241"},{"desc":"237","fix":"242"},{"desc":"237","fix":"243"},{"desc":"239","fix":"244"},{"desc":"239","fix":"245"},{"desc":"237","fix":"246"},"Update the dependencies array to be: [props]",{"range":"247","text":"248"},"Update the dependencies array to be: [idSearch, props]",{"range":"249","text":"250"},{"range":"251","text":"250"},{"range":"252","text":"248"},{"range":"253","text":"248"},{"range":"254","text":"250"},{"range":"255","text":"250"},{"range":"256","text":"248"},[409,411],"[props]",[796,798],"[idSearch, props]",[577,579],[357,359],[1532,1534],[796,798],[577,579],[357,359]]